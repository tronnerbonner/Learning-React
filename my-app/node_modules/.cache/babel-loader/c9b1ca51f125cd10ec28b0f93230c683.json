{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanne\\\\Documents\\\\Learning React\\\\Projects\\\\code\\\\my-app\\\\src\\\\FormValidation.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FormValidation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      feedback: '',\n      acceptedTerms: false,\n      validationErrors: {},\n      submitted: 0\n    };\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  handleOnChange(e) {\n    const target = e.target;\n    const name = target.name;\n    const value = target.type === 'text' ? target.value : target.checked // !this.state.acceptedTerms\n    ;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleOnSubmit(e) {\n    e.preventDefault();\n    this.validateFields();\n  }\n\n  validateFields() {\n    const {\n      firstName,\n      feedback,\n      acceptedTerms\n    } = this.state;\n    const errors = {};\n\n    if (!firstName) {\n      errors['firstName'] = 'First Name cannot be empty';\n    }\n\n    if (!feedback) {\n      errors['feedback'] = 'Feedback cannot be empty';\n    }\n\n    if (!acceptedTerms) {\n      errors['acceptedTerms'] = 'Please acccept terms';\n    }\n\n    this.setState({\n      validationErrors: errors\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Form Submit events:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleOnSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"error\",\n              children: this.state.validationErrors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"firstName\",\n              placeholder: \"First Name\",\n              value: this.state.firstName,\n              onChange: this.handleOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"feedback\",\n              placeholder: \"Feedback\",\n              value: this.state.feedback,\n              onChange: this.handleOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"acceptedTerms\",\n              checked: this.state.acceptedTerms,\n              onChange: this.handleOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), \" I accept the terms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Submitted \", this.state.submitted, \" times!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default FormValidation;","map":{"version":3,"sources":["C:/Users/tanne/Documents/Learning React/Projects/code/my-app/src/FormValidation.js"],"names":["React","Component","FormValidation","constructor","props","state","firstName","feedback","acceptedTerms","validationErrors","submitted","handleOnChange","bind","handleOnSubmit","e","target","name","value","type","checked","setState","preventDefault","validateFields","errors","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACrCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,aAAa,EAAE,KAHJ;AAIXC,MAAAA,gBAAgB,EAAE,EAJP;AAKXC,MAAAA,SAAS,EAAE;AALA,KAAb;AAQA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,cAAc,CAACG,CAAD,EAAI;AAChB,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACA,UAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,UAAMC,KAAK,GACTF,MAAM,CAACG,IAAP,KAAgB,MAAhB,GACEH,MAAM,CAACE,KADT,GAEEF,MAAM,CAACI,OAHA,CAGQ;AAHnB;AAMA,SAAKC,QAAL,CAAc;AACZ,OAACJ,IAAD,GAAQC;AADI,KAAd;AAGD;;AAEDJ,EAAAA,cAAc,CAACC,CAAD,EAAI;AAChBA,IAAAA,CAAC,CAACO,cAAF;AAEA,SAAKC,cAAL;AACD;;AAECA,EAAAA,cAAc,GAAE;AACZ,UAAK;AACDhB,MAAAA,SADC;AAEDC,MAAAA,QAFC;AAGDC,MAAAA;AAHC,QAID,KAAKH,KAJT;AAMA,UAAMkB,MAAM,GAAG,EAAf;;AAEA,QAAI,CAACjB,SAAL,EAAgB;AACZiB,MAAAA,MAAM,CAAC,WAAD,CAAN,GAAsB,4BAAtB;AACH;;AAED,QAAI,CAAChB,QAAL,EAAe;AACfgB,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,0BAArB;AACC;;AAED,QAAI,CAACf,aAAL,EAAoB;AAChBe,MAAAA,MAAM,CAAC,eAAD,CAAN,GAA0B,sBAA1B;AACH;;AAED,SAAKH,QAAL,CAAc;AACVX,MAAAA,gBAAgB,EAAEc;AADR,KAAd;AAGH;;AAGHC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACA;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,QAAQ,EAAE,KAAKX,cAArB;AAAA,kCACE;AAAA,oCACI;AAAM,cAAA,KAAK,EAAC,OAAZ;AAAA,wBAAqB,KAAKR,KAAL,CAAWI,gBAAX,CAA4BH;AAAjD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,IAAI,EAAC,WAFP;AAGE,cAAA,WAAW,EAAC,YAHd;AAIE,cAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,SAJpB;AAKE,cAAA,QAAQ,EAAE,KAAKK;AALjB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,WAAW,EAAC,UAHd;AAIE,cAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,QAJpB;AAKE,cAAA,QAAQ,EAAE,KAAKI;AALjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF,eAsBE;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,IAAI,EAAC,eAFP;AAGE,cAAA,OAAO,EAAE,KAAKN,KAAL,CAAWG,aAHtB;AAIE,cAAA,QAAQ,EAAE,KAAKG;AAJjB;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBF,eA+BE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/BF,eAiCE;AAAA,qCAAc,KAAKN,KAAL,CAAWK,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AA0CD;;AA1GoC;;AA6GvC,eAAeR,cAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass FormValidation extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      firstName: '',\r\n      feedback: '',\r\n      acceptedTerms: false,\r\n      validationErrors: {},\r\n      submitted: 0\r\n    }\r\n\r\n    this.handleOnChange = this.handleOnChange.bind(this)\r\n    this.handleOnSubmit = this.handleOnSubmit.bind(this)\r\n  }\r\n\r\n  handleOnChange(e) {\r\n    const target = e.target\r\n    const name = target.name\r\n    const value = (\r\n      target.type === 'text'\r\n      ? target.value\r\n      : target.checked // !this.state.acceptedTerms\r\n    )\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleOnSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    this.validateFields()\r\n  }\r\n\r\n    validateFields(){\r\n        const{\r\n            firstName,\r\n            feedback,\r\n            acceptedTerms\r\n        } = this.state\r\n\r\n        const errors = {}\r\n\r\n        if (!firstName) {\r\n            errors['firstName'] = 'First Name cannot be empty'\r\n        }\r\n\r\n        if (!feedback) {\r\n        errors['feedback'] = 'Feedback cannot be empty'\r\n        }\r\n\r\n        if (!acceptedTerms) {\r\n            errors['acceptedTerms'] = 'Please acccept terms'\r\n        }\r\n\r\n        this.setState({\r\n            validationErrors: errors\r\n        })\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <section>\r\n        <h3>Form Submit events:</h3>\r\n        <form onSubmit={this.handleOnSubmit}>\r\n          <label>\r\n              <span class=\"error\">{this.state.validationErrors.firstName}</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              placeholder=\"First Name\"\r\n              value={this.state.firstName}\r\n              onChange={this.handleOnChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"feedback\"\r\n              placeholder=\"Feedback\"\r\n              value={this.state.feedback}\r\n              onChange={this.handleOnChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"acceptedTerms\"\r\n              checked={this.state.acceptedTerms}\r\n              onChange={this.handleOnChange}\r\n            /> I accept the terms\r\n          </label>\r\n\r\n          <button type=\"submit\">Submit</button>\r\n\r\n          <p>Submitted {this.state.submitted} times!</p>\r\n        </form>\r\n      </section>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FormValidation;"]},"metadata":{},"sourceType":"module"}